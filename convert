# To convert a file from jpg to pdf
convert original.jpg converted.pdf

# To resize an image to a fixed width and proportional height:
convert original.jpg -resize 100x converted.jpg

# To resize an image to a fixed height and proportional width:
convert original.jpg -resize x100 converted.jpg

# To resize an image to a fixed width and height:
convert original.jpg -resize 100x100 converted.jpg

# To resize an image and simultaneously change its file type:
convert original.jpg -resize 100x converted.png

# To resize all of the images within a directory:
# To implement a for loop:
for file in `ls original/image/path/`;
    do new_path=${file%.*};
    new_file=`basename $new_path`;
    convert $file -resize 150 converted/image/path/$new_file.png;
done

# to convert an N page pdf to N images (will autonumber)
convert -density 150 arch1.pdf -quality 80 'output.jpg'

# to convert an N page pdf to N images with explicit filename formatting
convert -density 150 arch1.pdf -quality 80 'output-%d.jpg'
  
#doesnt work as expected.  %d and %[...] do not work together
#And leaving out the %d doesnt work bc files are not autonumbered.  Use bash loop instead
convert -density 150 arch1.pdf -quality 80 -set filename:mysize '%wx%h' 'output-%d%[filename:mysize].jpg'

