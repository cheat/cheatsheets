# To copy (update) the directory name and all the content of /src/foo into destination /dest/foo
# This command will create /dest/foo if it does not already exist
# archive mode (-a), update (-u), verbose (-v)
rsync -auv /src/foo /dest

# To copy (update) all the content of /src/foo into /dest without creating the subdirectory '/foo'
# Append a trailing slash on <src> (/src/foo/) to avoid creating an additional /foo directory in /dest 
rsync -auv /src/foo/ /dest
# Use --exclude=".*' to exclude all the hidden files, and use -n to 'DRY RUN' (test-run without file transfer) 
rsync -auv -n --exclude='.*' /src/foo/ /dest/

# To delete files on <dest> that don't exist in <source> during the update proces
rsync -auv --del <src> <dest>

# To copy files using checksum (-c) rather than time to detect if the file has
# changed. (Useful for validating backups):
rsync -avc <src> <dest>

# To copy files from remote to local (= PULL), maintaining file properties and sym-links
# archive mode (-a), zipping for faster transfer (-z), verbose (-v):
rsync -avz <user>@<host>:<src> <dest>

# To copy files from local to remote (= PUSH), maintaining file properties and sym-links
# archive mode (-a), zipping for faster transfer (-z), verbose (-v):
rsync -avz <src> <user>@<host>:<dest>
# how to rsync update from a gnu-linux computer (<src>) to remote D:\tmp on a Windows-Cygwin computer (<dest>)
rsync -auzv ./tmp/ <user>@<host>:/cygdrive/d/tmp

# To copy file from local to remote over ssh with non standard port 1234 to
# destination folder in remoteuser's home directory:
rsync -avz -e "ssh -p1234" <source> <user>@<host>:<dest>

# Use the specified authentication key, instead of typing a password:
# (The key can be generated by ssh-keygen, and the public key should be placed
# in remote's authorized_keys, e.g. using ssh-copy-id)
rsync -avz -e "ssh -i ~/.ssh/id_rsa" <src> <dest>

# Log into remote as a user, but promote to root, to access privileged files:
rsync -avz --rsync-path="sudo rsync" <user>@<src> <dest>

# Rsync only symlinks and preserve them as symlinks (dont follow them):
find /path/to/files -type l -print | \
  rsync -av --files-from=- /path/to/files <user>@<targethost>:/dest_path
